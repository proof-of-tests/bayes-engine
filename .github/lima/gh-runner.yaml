# Lima configuration for GitHub Actions self-hosted runner (aarch64-linux)
# Usage: limactl start --name=gh-runner-1 .github/lima/gh-runner.yaml
#        limactl start --name=gh-runner-2 .github/lima/gh-runner.yaml

images:
  # Try to use a release image with Apple Silicon support
  - location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64.img"
    arch: "aarch64"

# CPUs: 4 (adjust based on your Mac's specs)
cpus: 4

# Memory: 8GB (adjust based on your Mac's specs)
memory: "8GiB"

# Disk: 50GB should be enough for runners
disk: "50GiB"

# Provision scripts to install required software
provision:
  # Install system dependencies
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      # Update package lists
      apt-get update

      # Install required packages
      apt-get install -y \
        curl \
        git \
        jq \
        tar \
        sudo \
        ca-certificates \
        libicu74

      # Install Nix (required for building the project)
      if ! command -v nix &> /dev/null; then
        curl -L https://nixos.org/nix/install | sh -s -- --daemon --yes
      fi

      # Create a runner user (if it doesn't exist)
      if ! id -u runner &> /dev/null; then
        useradd -m -s /bin/bash runner
        usermod -aG sudo runner
        echo "runner ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
      fi

  # Set up Nix for the runner user
  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail

      # Source Nix if installed
      if [ -e /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ]; then
        . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
      fi

      # Enable experimental features for Nix flakes
      mkdir -p ~/.config/nix
      echo "experimental-features = nix-command flakes" > ~/.config/nix/nix.conf

      # Download and unpack GitHub Actions runner
      RUNNER_VERSION="2.329.0"
      RUNNER_ARCH="linux-arm64"
      RUNNER_PACKAGE="actions-runner-${RUNNER_ARCH}-${RUNNER_VERSION}.tar.gz"
      RUNNER_URL="https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/${RUNNER_PACKAGE}"
      RUNNER_HASH="56768348b3d643a6a29d4ad71e9bdae0dc0ef1eb01afe0f7a8ee097b039bfaaf"

      echo "Downloading GitHub Actions runner package..."
      RUNNER_DIR="$HOME/actions-runner"
      mkdir -p "$RUNNER_DIR"
      cd "$RUNNER_DIR"

      curl -o "${RUNNER_PACKAGE}" -L "${RUNNER_URL}"

      echo "Validating hash..."
      if ! echo "${RUNNER_HASH}  ${RUNNER_PACKAGE}" | shasum -a 256 -c; then
        echo "Error: Hash validation failed. The downloaded file may be corrupted."
        exit 1
      fi

      echo "Extracting installer..."
      tar xzf "./${RUNNER_PACKAGE}"
      rm "${RUNNER_PACKAGE}"

      # Create setup-runner.sh script in home directory
      cat > ~/setup-runner.sh <<'SETUP_SCRIPT_EOF'
      #!/usr/bin/env bash
      # Setup script for GitHub Actions self-hosted runner
      # Usage: ./setup-runner.sh <REG_TOKEN>

      set -euo pipefail

      if [ $# -lt 1 ]; then
        echo "Usage: $0 <REG_TOKEN>"
        echo ""
        echo "Example: $0 ABCD1234EXAMPLE"
        echo ""
        echo "To get a registration token, visit:"
        echo "  https://github.com/proof-of-tests/bayes-engine/settings/actions/runners/new"
        echo "  (Select Linux and ARM64, then copy the token)"
        exit 1
      fi

      REG_TOKEN="$1"
      RUNNER_NAME="$(hostname)"
      REPO_URL="https://github.com/proof-of-tests/bayes-engine"

      echo "Setting up GitHub Actions runner: $RUNNER_NAME"
      echo "Repository: $REPO_URL"
      echo ""

      # Configure the runner
      cd "$HOME/actions-runner"

      echo "Configuring runner..."
      ./config.sh \
        --url "$REPO_URL" \
        --token "$REG_TOKEN" \
        --name "$RUNNER_NAME" \
        --labels "self-hosted,Linux,ARM64" \
        --unattended

      # Install and start as a systemd service
      echo ""
      echo "Installing runner as systemd service..."
      sudo ./svc.sh install
      sudo ./svc.sh start

      echo ""
      echo "âœ… GitHub Actions runner '$RUNNER_NAME' has been configured and started!"
      echo ""
      echo "To check status:"
      echo "  sudo ./svc.sh status"
      echo ""
      echo "To view logs:"
      echo "  journalctl -u actions.runner.proof-of-tests.bayes-engine.${RUNNER_NAME}.service -f"
      echo ""
      echo "To stop the runner:"
      echo "  sudo ./svc.sh stop"
      echo ""
      echo "To uninstall the runner:"
      echo "  sudo ./svc.sh uninstall"
      echo "  ./config.sh remove --token <REG_TOKEN>"
      SETUP_SCRIPT_EOF

      chmod +x ~/setup-runner.sh

# SSH settings
ssh:
  loadDotSSHPubKeys: true
