use worker::*;

#[event(fetch)]
async fn fetch(req: Request, _env: Env, _ctx: worker::Context) -> Result<Response> {
    console_error_panic_hook::set_once();

    let path = req.path();

    // TODO: Implement asset serving
    // The server needs to serve:
    // - / -> HTML page
    // - /style.css -> CSS
    // - /pkg/client.js -> WASM JavaScript glue
    // - /pkg/client_bg.wasm -> WASM binary
    //
    // Current blocker: Cannot use include_str!/include_bytes! because files don't
    // exist at compile time (they're generated by building the client crate).
    //
    // Possible solutions:
    // 1. Custom build script that builds client first
    // 2. Use CloudFlare Workers Assets binding
    // 3. Serve from R2/KV storage
    // 4. Multi-stage build process

    Response::error(
        format!(
            "Asset serving not implemented yet. Requested: {}. See server/src/lib.rs for details.",
            path
        ),
        501,
    )
}
